<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ElastiCache on Andreas Strikos</title><link>https://astrikos.github.io/tags/elasticache/</link><description>Recent content in ElastiCache on Andreas Strikos</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 17 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://astrikos.github.io/tags/elasticache/index.xml" rel="self" type="application/rss+xml"/><item><title>An ElastiCache Migration Story</title><link>https://astrikos.github.io/2020/03/an-elasticache-migration-story/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://astrikos.github.io/2020/03/an-elasticache-migration-story/</guid><description>The Problem At Beat, a tech company that has been around for a while, our product consists of a bigger, constantly decreasing in size, monolith and a constantly increasing number of microservices. For our services that need persistence, we use several kinds of databases to store their state and, at the same time, we have chosen Redis to be leveraged as a second-layer cache in front of them. So far we have been using the AWS ElastiCache managed service in a disabled cluster mode.</description></item></channel></rss>